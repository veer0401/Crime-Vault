@model CRMS.Models.EditModel.EditCaseDetailsViewModel
@using CRMS.Models.EditModel
@{
    ViewData["Title"] = "Edit Case Details";
    Layout = "_ContentNavbarLayout";
}


<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Edit Case Details</h4>
                </div>
                <div class="card-body">
                    <ul class="nav nav-tabs" id="caseTabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" role="tab">Case Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="criminals-tab" data-bs-toggle="tab" data-bs-target="#criminals" role="tab">Criminals</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="evidence-tab" data-bs-toggle="tab" data-bs-target="#evidence" role="tab">Evidence</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="witnesses-tab" data-bs-toggle="tab" data-bs-target="#witnesses" role="tab">Witnesses</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="victims-tab" data-bs-toggle="tab" data-bs-target="#victims" role="tab">Victims</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" id="suspects-tab" data-bs-toggle="tab" data-bs-target="#suspects" role="tab">Suspects</a>
                        </li>
                    </ul>

                    <div class="tab-content mt-3" id="caseTabContent">
                        <div class="tab-pane fade show active" id="details" role="tabpanel">
                            <form asp-action="Edit" method="post">
                                <input type="hidden" asp-for="Id" />
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                <div class="form-group">
                                    <label asp-for="Title" class="control-label"></label>
                                    <input asp-for="Title" class="form-control" />
                                    <span asp-validation-for="Title" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Description" class="control-label"></label>
                                    <textarea asp-for="Description" class="form-control"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Status" class="control-label"></label>
                                    <select asp-for="Status" class="form-control">
                                        <option value="Open">Open</option>
                                        <option value="In Progress">In Progress</option>
                                        <option value="Closed">Closed</option>
                                    </select>
                                    <span asp-validation-for="Status" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Priority" class="control-label"></label>
                                    <select asp-for="Priority" class="form-control">
                                        <option value="Low">Low</option>
                                        <option value="Medium">Medium</option>
                                        <option value="High">High</option>
                                    </select>
                                    <span asp-validation-for="Priority" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Location" class="control-label"></label>
                                    <input asp-for="Location" class="form-control" />
                                    <span asp-validation-for="Location" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label class="control-label">Teams</label>
                                    <select asp-for="SelectedTeams" class="form-control" multiple>
                                        @foreach (var team in ViewBag.Teams)
                                        {
                                            <option value="@team.Id">@team.Name</option>
                                        }
                                    </select>
                                </div>

                                <div class="form-group">
                                    <label class="control-label">Created Date</label>
                                    <input type="text" class="form-control" value="@Model.CreatedDate.ToString("yyyy-MM-dd HH:mm:ss")" readonly />
                                </div>

                                <div class="form-group">
                                    <label class="control-label">Last Updated</label>
                                    <input type="text" class="form-control" value="@Model.UpdatedDate.ToString("yyyy-MM-dd HH:mm:ss")" readonly />
                                </div>

                                <div class="form-group">
                                    <input type="submit" value="Save Changes" class="btn btn-primary" />
                                    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                                </div>
                            </form>
                        </div>

                        <div class="tab-pane fade" id="criminals" role="tabpanel">
                            <div class="mb-3">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCriminalModal">
                                    Add Criminal
                                </button>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Notes</th>
                                            <th>Role</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.Criminals != null)
                                        {
                                            @foreach (var criminal in Model.Criminals)
                                            {
                                                <tr>
                                                    
                                                    <td>@criminal.Name</td>
                                                    <td>@criminal.Notes</td>
                                                    <td>@criminal.Role</td>
                                                    <td>
                                                        <button type="button" class="btn btn-primary btn-sm" onclick="editCriminal('@criminal.Id')">
                                                            <i class="fas fa-edit"></i> Edit
                                                        </button>
                                                        <button type="button" class="btn btn-danger btn-sm" onclick="deleteCriminal('@criminal.Id')">
                                                            <i class="fas fa-trash"></i> Delete
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="evidence" role="tabpanel">
                            <div class="mb-3">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addEvidenceModal">
                                    Add Evidence
                                </button>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Description</th>
                                            <th>Collection Date</th>
                                            <th>Location</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var evidence in Model.Evidences)
                                        {
                                            <tr>
                                                <td>@evidence.Description</td>
                                                <td>@evidence.CollectionDate.ToString("yyyy-MM-dd")</td>
                                                <td>@evidence.StorageLocation</td>
                                                <td>
                                                    <button type="button" class="btn btn-sm btn-info" onclick="editEvidence(@evidence.Id)">Edit</button>
                                                    <button type="button" class="btn btn-sm btn-danger" onclick="deleteEvidence(@evidence.Id)">Delete</button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="witnesses" role="tabpanel">
                            <div class="mb-3">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addWitnessModal">
                                    Add Witness
                                </button>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Contact</th>
                                            <th>Statement</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var witness in Model.Witnesses)
                                        {
                                            <tr>
                                                <td>@witness.Name</td>
                                                <td>@witness.ContactNumber</td>
                                                <td>@witness.Statement</td>
                                                <td>
                                                    <button type="button" class="btn btn-sm btn-info" onclick="editWitness(@witness.Id)">Edit</button>
                                                    <button type="button" class="btn btn-sm btn-danger" onclick="deleteWitness(@witness.Id)">Delete</button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="victims" role="tabpanel">
                            <div class="mb-3">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addVictimModal">
                                    Add Victim
                                </button>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Contact</th>
                                            <th>Incident Date</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var victim in Model.Victims)
                                        {
                                            <tr>
                                                <td>@victim.Name</td>
                                                <td>@victim.ContactNumber</td>
                                                <td>@victim.IncidentDate.ToString("yyyy-MM-dd")</td>
                                                <td>
                                                    <button type="button" class="btn btn-sm btn-info" onclick="editVictim(@victim.Id)">Edit</button>
                                                    <button type="button" class="btn btn-sm btn-danger" onclick="deleteVictim(@victim.Id)">Delete</button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="suspects" role="tabpanel">
                            <div class="mb-3">
                                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addSuspectModal">
                                    Add Suspect
                                </button>
                            </div>
                            <div class="table-responsive">
                                <table class="table table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Description</th>
                                            <th>Last Seen Date</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var suspect in Model.Suspects)
                                        {
                                            <tr>
                                                <td>@suspect.Name</td>
                                                <td>@suspect.Description</td>
                                                @* <td>@suspect.Dat.ToString("yyyy-MM-dd")</td> *@
                                                <td>
                                                    <button type="button" class="btn btn-sm btn-info" onclick="editSuspect(@suspect.Id)">Edit</button>
                                                    <button type="button" class="btn btn-sm btn-danger" onclick="deleteSuspect(@suspect.Id)">Delete</button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@foreach (var evidence in Model.Evidences)
{
    @await Html.PartialAsync("_EvidenceModalPartial", evidence)
}
@foreach (var witness in Model.Witnesses) // Make sure this is List<EditWitnessViewModel>
{
    @await Html.PartialAsync("_WitnessModalPartial", witness)
}
@foreach (var victim in Model.Victims) // Make sure this is List<EditVictimViewModel>
{
    @await Html.PartialAsync("_VictimModalPartial", victim)
}
@foreach (var suspect in Model.Suspects)
{
    @await Html.PartialAsync("_SuspectModalPartial", suspect)
}
@foreach (var criminal in Model.Criminals)
{
    @await Html.PartialAsync("_CriminalModalPartial", criminal)
}
@await Html.PartialAsync("_AddCriminalModalPartial", new CRMS.Models.EditModel.EditCriminalViewModel { CaseId = Model.Id })

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Common function to handle form submissions
        function handleFormSubmit(formId, url, modalId, successCallback) {
            $(formId).submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: url,
                    type: 'POST',
                    data: $(this).serialize(),
                    success: function (result) {
                        if (result.success) {
                            var modalElement = document.querySelector(modalId);
                            var modalInstance = bootstrap.Modal.getInstance(modalElement);
                            if (modalInstance) {
                                modalInstance.hide();
                            }
                            successCallback(result);
                            toastr.success('Operation completed successfully');
                        } else {
                            toastr.error(result.message || 'An error occurred');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while processing your request');
                    }
                });
            });
        }

        // Common function to handle deletions
        function handleDelete(url, id, successCallback) {
            if (confirm('Are you sure you want to delete this item?')) {
                $.ajax({
                    url: url + '/' + id,
                    type: 'POST',
                    data: { id: id },
                    success: function (result) {
                        if (result.success) {
                            successCallback();
                            toastr.success('Item deleted successfully');
                        } else {
                            toastr.error(result.message || 'An error occurred');
                        }
                    },
                    error: function () {
                        toastr.error('An error occurred while processing your request');
                    }
                });
            }
        }

                // Criminal CRUD operations
            function editCriminal(criminalId) {
            $.get('/Case/GetCriminal/' + criminalId, function (data) {
                if (data) {
                    console.log("Criminal Data:", data);

                    // Name from Criminal model
                    $('#editCriminalForm input[name="Name"]').val(data.name);

                    // Other fields from CaseCriminal
                    $('#editCriminalForm input[name="Id"]').val(data.id);
                    $('#editCriminalForm input[name="CaseId"]').val(data.caseId);
                    $('#editCriminalForm input[name="Role"]').val(data.role);
                    $('#editCriminalForm textarea[name="Notes"]').val(data.notes);

                    // Show the modal
                    var modal = new bootstrap.Modal(document.getElementById('editCriminalModal'));
                    modal.show();
                } else {
                    console.warn("No data found for the selected criminal.");
                }
            }).fail(function (xhr, status, error) {
                console.error("Error loading criminal:", error);
                console.error("Response text:", xhr.responseText);
            });
        }


        // Handle form submission
        $('#editCriminalForm').on('submit', function (e) {
            e.preventDefault();
            
            // Get the form data
            var formData = $(this).serialize();
            console.log('Submitting form data:', formData);

            // Validate required fields
            var name = $('input[name="Name"]').val();
            var age = $('input[name="Age"]').val();
            var gender = $('select[name="Gender"]').val();
            var status = $('select[name="Status"]').val();
            var role = $('input[name="Role"]').val();
            
            // Hide all error messages first
            $('.text-danger').hide();
            
            // Validate each required field
            var isValid = true;
            if (!name) {
                $('span[data-valmsg-for="Name"]').show();
                isValid = false;
            }
            if (!age || age < 0 || age > 120) {
                $('span[data-valmsg-for="Age"]').show();
                isValid = false;
            }
            if (!gender) {
                $('span[data-valmsg-for="Gender"]').show();
                isValid = false;
            }
            if (!status) {
                $('span[data-valmsg-for="Status"]').show();
                isValid = false;
            }
            if (!role) {
                $('span[data-valmsg-for="Role"]').show();
                isValid = false;
            }
            
            if (!isValid) {
                return false;
            }

            $.ajax({
                url: '/Case/UpdateCriminal',
                type: 'POST',
                data: formData,
                success: function (response) {
                    console.log('UpdateCriminal response:', response);
                    if (response.success) {
                        toastr.success('Criminal updated successfully');
                        $('#editCriminalModal').modal('hide');
                        location.reload(); // Refresh the page to show updated data
                    } else {
                        toastr.error(response.message || 'Failed to update criminal');
                        if (response.errors) {
                            // Display validation errors
                            Object.keys(response.errors).forEach(function(key) {
                                $('span[data-valmsg-for="' + key + '"]').text(response.errors[key]).show();
                            });
                        }
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error updating criminal:', error);
                    console.error('Response:', xhr.responseText);
                    toastr.error('An error occurred while updating the criminal');
                }
            });
        });

        function deleteCriminal(id) {
            handleDelete('/Case/DeleteCriminal', id, function () {
                location.reload();
            });
        }

        // Evidence CRUD operations
        function editEvidence(id) {
            $.get('/Case/GetEvidence/' + id, function (data) {
                $('#evidenceForm')[0].reset();
                $('#evidenceForm').find('[name="Id"]').val(data.id);
                $('#evidenceForm').find('[name="Description"]').val(data.description);
                $('#evidenceForm').find('[name="CollectionDate"]').val(data.collectionDate.split('T')[0]);
                $('#evidenceForm').find('[name="Location"]').val(data.location);
                $('#evidenceForm').find('[name="Type"]').val(data.type);
                $('#evidenceForm').find('[name="Status"]').val(data.status);
                var evidenceModal = new bootstrap.Modal(document.getElementById('addEvidenceModal'));
                evidenceModal.show();
            });
        }

        function deleteEvidence(id) {
            handleDelete('/Case/DeleteEvidence', id, function () {
                location.reload();
            });
        }

        // Witness CRUD operations
        function editWitness(id) {
            $.get('/Case/GetWitness/' + id, function (data) {
                $('#witnessForm')[0].reset();
                $('#witnessForm').find('[name="Id"]').val(data.id);
                $('#witnessForm').find('[name="Name"]').val(data.name);
                $('#witnessForm').find('[name="Contact"]').val(data.contact);
                $('#witnessForm').find('[name="Statement"]').val(data.statement);
                $('#witnessForm').find('[name="RelationToCase"]').val(data.relationToCase);
                $('#witnessForm').find('[name="Status"]').val(data.status);
                var witnessModal = new bootstrap.Modal(document.getElementById('addWitnessModal'));
                witnessModal.show();
            });
        }

        function deleteWitness(id) {
            handleDelete('/Case/DeleteWitness', id, function () {
                location.reload();
            });
        }

        // Victim CRUD operations
        function editVictim(id) {
            $.get('/Case/GetVictim/' + id, function (data) {
                $('#victimForm')[0].reset();
                $('#victimForm').find('[name="Id"]').val(data.id);
                $('#victimForm').find('[name="Name"]').val(data.name);
                $('#victimForm').find('[name="Contact"]').val(data.contact);
                $('#victimForm').find('[name="IncidentDate"]').val(data.incidentDate.split('T')[0]);
                $('#victimForm').find('[name="Description"]').val(data.description);
                $('#victimForm').find('[name="InjurySeverity"]').val(data.injurySeverity);
                $('#victimForm').find('[name="Status"]').val(data.status);
                var victimModal = new bootstrap.Modal(document.getElementById('addVictimModal'));
                victimModal.show();
            });
        }

        function deleteVictim(id) {
            handleDelete('/Case/DeleteVictim', id, function () {
                location.reload();
            });
        }

        // Suspect CRUD operations
        function editSuspect(id) {
            $.get('/Case/GetSuspect/' + id, function (data) {
                $('#suspectForm')[0].reset();
                $('#suspectForm').find('[name="Id"]').val(data.id);
                $('#suspectForm').find('[name="Name"]').val(data.name);
                $('#suspectForm').find('[name="Description"]').val(data.description);
                $('#suspectForm').find('[name="LastSeenDate"]').val(data.lastSeenDate.split('T')[0]);
                $('#suspectForm').find('[name="LastKnownLocation"]').val(data.lastKnownLocation);
                $('#suspectForm').find('[name="Status"]').val(data.status);
                $('#suspectForm').find('[name="ThreatLevel"]').val(data.threatLevel);
                var suspectModal = new bootstrap.Modal(document.getElementById('addSuspectModal'));
                suspectModal.show();
            });
        }

        function deleteSuspect(id) {
            handleDelete('/Case/DeleteSuspect', id, function () {
                location.reload();
            });
        }

        // Initialize form handlers
        $(document).ready(function () {
            // Initialize Bootstrap 5 modals
            var modals = document.querySelectorAll('.modal');
            modals.forEach(function(modalEl) {
                new bootstrap.Modal(modalEl);
            });
            
            // Load criminals when Add Criminal modal is shown
        $('#addCriminalModal').on('show.bs.modal', function () {
            // Clear previous selections
            $('#existingCriminalSelect').empty();
            $('#existingCriminalSelect').append('<option value="">-- Select a Criminal --</option>');

            // Make sure the CaseId is set correctly in the forms
            var caseId = $('#Id').val();
            $('#existingCriminalForm [name="CaseId"]').val(caseId);

            // Fetch criminals from API
            $.ajax({
                url: '/api/CriminalApi',
                type: 'GET',
                success: function(response) {
                    if (response && response.data) {
                        response.data.forEach(function(criminal) {
                            $('#existingCriminalSelect').append('<option value="' + criminal.id + '">' + criminal.name + '</option>');
                        });
                    } else {
                        toastr.warning('No criminals found.');
                    }
                },
                error: function() {
                    toastr.error('Failed to load criminals list');
                }
            });
        });

        // Handle Existing Criminal form submission
        $('#saveExistingCriminal').on('click', function () {
            $('#existingCriminalForm').submit(); // Manually trigger form submission
        });

        $('#existingCriminalForm').submit(function(e) {
            e.preventDefault();
            var formData = $(this).serialize();
            console.log('Submitting existing criminal form:', formData);

            // Validate that a criminal is selected
            var selectedCriminal = $('#existingCriminalSelect').val();
            if (!selectedCriminal) {
                $('#existingCriminalSelectError').show();
                return false;
            }
            $('#existingCriminalSelectError').hide();

            // Validate that role is provided
            var role = $('input[name="Role"]').val();
            if (!role) {
                $('#roleError').show();
                return false;
            }
            $('#roleError').hide();

            $.ajax({
                url: '/Case/AddCriminal',
                type: 'POST',
                data: formData,
                success: function(result) {
                    console.log('AddCriminal response:', result);
                    if (result.success) {
                        $('#addCriminalModal').modal('hide');
                        location.reload(); // Reload the page to reflect changes
                    } else {
                        toastr.error(result.message || 'Failed to add criminal');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error adding criminal:', error);
                    console.error('Response:', xhr.responseText);
                    toastr.error('An error occurred while adding the criminal');
                }
            });
        });


            // Handle New Criminal form submission
            
            handleFormSubmit('#evidenceForm', '/Case/AddEvidence', '#addEvidenceModal', function () {
                location.reload();
            });

            handleFormSubmit('#witnessForm', '/Case/AddWitness', '#addWitnessModal', function () {
                location.reload();
            });

            handleFormSubmit('#victimForm', '/Case/AddVictim', '#addVictimModal', function () {
                location.reload();
            });

            handleFormSubmit('#suspectForm', '/Case/AddSuspect', '#addSuspectModal', function () {
                location.reload();
            });
        });
    </script>
}